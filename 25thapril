Agenda:
dictionaries,sets
Recursion/Problem statements(Towers  of Hanoi)
Dynamic Programming
Object Oriented Programming

Recursive solution to print nth fibonacci number
def fib(n):
    if n<=0:
        return -1;
    elif n==1:
        return 0;
    elif n==2:
        return 1;
    else:
        return fib(n-1)+fib(n-2);
result=fib(10)
print(result)

Sum of N Fibonacci Numbers

def sumOfNFibonaciNumber(n):
    if n<=0:
        return -1
    if n == 1:
        return 0
    if n==2:
        return 1
    first , second = 0 , 1
    result = first + second
    for i in range(0,n-2):
        next = first + second
        result+=next
        first = second
        second = next
    print(result)

sumOfNFibonaciNumber(10)
o/p:88

Set:
set is a data structure which doesn'y allow duplicate values
set is an unordered and unindexed
arr=[1,3,2,4,6,7,5,2,3,4]
my_set=set(arr)
print(my_set)
o/p: {1, 2, 3, 4, 5, 6, 7}
my_set.add(34)
print(my_set)
o/p: {1, 2, 3, 4, 5, 6, 7, 34}
 my_set.clear()
 print(my_set)
o/p: set()

Dictionary:
stores data in key-value pairs
it is ordered
it is changeable
it doesnt allow duplicates
